{"@t":"2024-08-21T12:46:08.6491050Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:46:08.7051380Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:46:08.7097600Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:46:24.7845390Z","@mt":"Application startup failed","@l":"Fatal","@x":"System.InvalidOperationException: An exception has been raised that is likely due to a transient failure. Consider enabling transient error resiliency by adding 'EnableRetryOnFailure' to the 'UseSqlServer' call.\n ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Database 'sqldb-rade-001' on server 'sqlserver-rade-001.database.windows.net' is not currently available.  Please retry the connection later.  If the problem persists, contact customer support, and provide them the session tracing ID of '{A4438E55-7189-4CA5-926E-8F31364486A0}'.\n   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)\n   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)\n   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)\n   at Microsoft.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.CompleteLogin(Boolean enlistOK)\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)\n   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)\n   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\n   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\n   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)\n   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)\n   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)\n   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\n   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)\n   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)\n   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass18_0.<Exists>b__0(DateTime giveUp)\n   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c__DisplayClass12_0`2.<Execute>b__0(DbContext _, TState s)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\nClientConnectionId:f736bb4f-2090-4a25-9f0d-f6020a4fd77a\nError Number:40613,State:1,Class:20\n   --- End of inner exception stack trace ---\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)\n   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation, Func`2 verifySucceeded)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists(Boolean retryOnNotExists)\n   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists()\n   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.Exists()\n   at Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.GetAppliedMigrations()\n   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(DatabaseFacade databaseFacade)\n   at Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(DatabaseFacade databaseFacade)\n   at Restaurants.Infrastructure.RestaurantSeeder.Seed() in /Users/raca/Desktop/Restaurants/src/Restaurants.Infrastructure/Seeders/RestaurantSeeder.cs:line 11\n   at Program.<Main>$(String[] args) in /Users/raca/Desktop/Restaurants/src/Restaurants.Api/Program.cs:line 23"}
{"@t":"2024-08-21T12:47:08.2076330Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:47:08.2618660Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:47:08.2667000Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-08-21T12:47:14.5163100Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"51","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:14.5904310Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"67","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:14.6707660Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"63","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [MigrationId], [ProductVersion]\nFROM [__EFMigrationsHistory]\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:14.7282670Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"48","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:14.9194400Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"55","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:14.9690670Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"46","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-08-21T12:47:15.4967030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.0398"],"@tr":"92e35f64b573153446cca4e2247035bc","@sp":"87b1cb8004ea004e","RequestMethod":"GET","RequestPath":"/","StatusCode":404,"Elapsed":7.039791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:15.5816370Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.6892"],"@tr":"1b6116df4cb639e5eae3e7b8e64837b5","@sp":"ea8b4883d3c8b05a","RequestMethod":"GET","RequestPath":"/apple-touch-icon-precomposed.png","StatusCode":404,"Elapsed":0.689167,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:15.6317070Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.4456"],"@tr":"5710411b658458e0ad4a0ed4fe611edb","@sp":"0ddf4b7e3ba8b72d","RequestMethod":"GET","RequestPath":"/apple-touch-icon.png","StatusCode":404,"Elapsed":0.445625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:16.4254720Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["40.5433"],"@tr":"2357eb54de601ee9d9dd279d1356e8b2","@sp":"f1ecd856b9764445","RequestMethod":"GET","RequestPath":"/swagger/index.html","StatusCode":200,"Elapsed":40.543292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:16.6697350Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["123.4445"],"@tr":"4652298a869604d2280534f3937234e5","@sp":"bbce94386c768906","RequestMethod":"GET","RequestPath":"/swagger/swagger-ui-standalone-preset.js","StatusCode":200,"Elapsed":123.444541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:16.7377060Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["239.1636"],"@tr":"96a4bfbfcbf89ff3c8572e7908fe0fab","@sp":"51812d9c9600d9bd","RequestMethod":"GET","RequestPath":"/swagger/swagger-ui-bundle.js","StatusCode":200,"Elapsed":239.163583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:16.9953510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["102.0675"],"@tr":"dce68e378843ab32817457ee9a7bce97","@sp":"58c97e1b270a6e8f","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":102.067542,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:32.5764680Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["81.1225"],"@tr":"d1b60bd6c6c268a0bdda31920a4cf157","@sp":"ec67ab2faa2dfe0a","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":400,"Elapsed":81.122458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-08-21T12:47:42.5218080Z","@mt":"Getting all restaurants","@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"a75b8bde-a2c3-4c3f-b471-d145153149d5","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN61RTH7TA71:0000000D","RequestPath":"/api/restaurants","ConnectionId":"0HN61RTH7TA71"}
{"@t":"2024-08-21T12:47:42.6155640Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","elapsed":"55","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a75b8bde-a2c3-4c3f-b471-d145153149d5","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN61RTH7TA71:0000000D","RequestPath":"/api/restaurants","ConnectionId":"0HN61RTH7TA71"}
{"@t":"2024-08-21T12:47:42.6288630Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"a75b8bde-a2c3-4c3f-b471-d145153149d5","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN61RTH7TA71:0000000D","RequestPath":"/api/restaurants","ConnectionId":"0HN61RTH7TA71"}
{"@t":"2024-08-21T12:47:42.6290880Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"a75b8bde-a2c3-4c3f-b471-d145153149d5","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN61RTH7TA71:0000000D","RequestPath":"/api/restaurants","ConnectionId":"0HN61RTH7TA71"}
{"@t":"2024-08-21T12:47:42.7144670Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","elapsed":"55","parameters":"@__p_0='0', @__p_1='5'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"a75b8bde-a2c3-4c3f-b471-d145153149d5","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN61RTH7TA71:0000000D","RequestPath":"/api/restaurants","ConnectionId":"0HN61RTH7TA71"}
{"@t":"2024-08-21T12:47:42.7653580Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["312.1653"],"@tr":"2d98825d0dd0e1cb86826731a363aab0","@sp":"158ad00dfa202f1c","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":312.16525,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
