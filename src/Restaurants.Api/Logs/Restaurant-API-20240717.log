{"@t":"2024-07-17T12:03:30.0398890Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:03:30.0978190Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:03:30.1032930Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:03:30.5340760Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"32","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:03:30.6836250Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"25","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:03:30.6954480Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"5","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:04:03.9961780Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["10.1656"],"@tr":"de7e54cbbd7d7c2a735065bbca143900","@sp":"96ee4cd40f0f138a","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":10.165583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:04:22.9720470Z","@mt":"Getting all restaurants","@tr":"3c1e039891a166b917ada19c271b22cf","@sp":"0fe2f105ae211dd3","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"0a045dfd-b7f1-482e-80f3-e00418208680","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B26MANA6:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B26MANA6"}
{"@t":"2024-07-17T12:04:24.8584520Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"3c1e039891a166b917ada19c271b22cf","@sp":"0fe2f105ae211dd3","elapsed":"1,807","parameters":"@__searchPhraseToLower_0_rewritten='%kfc%' (Size = 4000)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"0a045dfd-b7f1-482e-80f3-e00418208680","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B26MANA6:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B26MANA6"}
{"@t":"2024-07-17T12:04:29.9099870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["25844.7884"],"@tr":"3c1e039891a166b917ada19c271b22cf","@sp":"0fe2f105ae211dd3","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":25844.788375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:04:29.9120850Z","@mt":"Request [{Verb}] at {Path} took {Time} ms","@tr":"3c1e039891a166b917ada19c271b22cf","@sp":"0fe2f105ae211dd3","Verb":"GET","Path":"/api/restaurants","Time":25845,"SourceContext":"Restaurants.Api.RequestTimeLoggingMiddleware","RequestId":"0HN56B26MANA6:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B26MANA6"}
{"@t":"2024-07-17T12:09:14.1814930Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:09:14.2326470Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:09:14.2382460Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:09:14.5824940Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"22","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:09:14.6990740Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"13","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:09:14.7100460Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:09:16.5214140Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["7.2410"],"@tr":"70cd81c40273f9844447a255bbfd908a","@sp":"4ef47d48fd32a2fe","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":7.241042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:09:20.2243010Z","@mt":"Getting all restaurants","@tr":"5a55793affe5e02946287c703b135eff","@sp":"0b17c0eed64ad7c5","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"d58912f2-5f17-4454-bfcc-fca268c6787e","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B53R2400:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B53R2400"}
{"@t":"2024-07-17T12:09:20.3544200Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"5a55793affe5e02946287c703b135eff","@sp":"0b17c0eed64ad7c5","elapsed":"61","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE 0 = 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"d58912f2-5f17-4454-bfcc-fca268c6787e","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B53R2400:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B53R2400"}
{"@t":"2024-07-17T12:09:20.3776220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["3812.0807"],"@tr":"5a55793affe5e02946287c703b135eff","@sp":"0b17c0eed64ad7c5","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":3812.080666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:09:34.4709240Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.4510"],"@tr":"a48b919fdccb804019bf9b960e4cec4e","@sp":"d3cccd4b9786775f","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":1.450958,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:09:34.5940060Z","@mt":"Getting all restaurants","@tr":"baad0edf22f59655766a28ad0e453cef","@sp":"77fa4dce0f5df57f","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"d58912f2-5f17-4454-bfcc-fca268c6787e","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B53R2402:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B53R2402"}
{"@t":"2024-07-17T12:09:34.6512250Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"baad0edf22f59655766a28ad0e453cef","@sp":"77fa4dce0f5df57f","elapsed":"10","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE 0 = 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"d58912f2-5f17-4454-bfcc-fca268c6787e","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B53R2402:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B53R2402"}
{"@t":"2024-07-17T12:09:34.6530490Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["67.2793"],"@tr":"baad0edf22f59655766a28ad0e453cef","@sp":"77fa4dce0f5df57f","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":67.279292,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:11.2864070Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:10:11.3365140Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:10:11.3412170Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T12:10:11.6048950Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:10:11.7116020Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"6","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:10:11.7195510Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T12:10:16.5640960Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["9.0562"],"@tr":"0fcfe27a849049eef5dc34a7b235dd96","@sp":"36185f5070e0a345","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":9.056208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:16.7203770Z","@mt":"Getting all restaurants","@tr":"a8a138e28fdd94c0721cb121b446b5da","@sp":"ae02aa414c205f10","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK98:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK98"}
{"@t":"2024-07-17T12:10:16.8058040Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"a8a138e28fdd94c0721cb121b446b5da","@sp":"ae02aa414c205f10","elapsed":"45","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK98:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK98"}
{"@t":"2024-07-17T12:10:17.0911500Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["459.1289"],"@tr":"a8a138e28fdd94c0721cb121b446b5da","@sp":"ae02aa414c205f10","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":459.128875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:28.5395950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.4133"],"@tr":"2e87a529bb38ce540648ea6c376e8781","@sp":"9aae513c011c0821","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":1.413333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:28.6106980Z","@mt":"Getting all restaurants","@tr":"e9a9d61497510be192e72e2fbec3c897","@sp":"856147b008d722fa","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK9A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK9A"}
{"@t":"2024-07-17T12:10:28.7449140Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"e9a9d61497510be192e72e2fbec3c897","@sp":"856147b008d722fa","elapsed":"64","parameters":"@__searchPhraseToLower_0_rewritten='%kfc%' (Size = 4000)","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK9A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK9A"}
{"@t":"2024-07-17T12:10:28.7476870Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["149.9037"],"@tr":"e9a9d61497510be192e72e2fbec3c897","@sp":"856147b008d722fa","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":149.903666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:42.7558970Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.1834"],"@tr":"1b00d3ec3a6751c562bf2a7ce587e646","@sp":"593fa79aeaa9d54c","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":8.183417,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T12:10:42.8552050Z","@mt":"Getting all restaurants","@tr":"b5465c0ebfafb628d9f135c1748a3218","@sp":"1ec5d7d4b6df85c0","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK9C:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK9C"}
{"@t":"2024-07-17T12:10:42.8772750Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b5465c0ebfafb628d9f135c1748a3218","@sp":"1ec5d7d4b6df85c0","elapsed":"15","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"3c0687bf-0175-4580-9cc2-12e3e1d421dc","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56B5LNDK9C:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56B5LNDK9C"}
{"@t":"2024-07-17T12:10:43.1086880Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["261.0740"],"@tr":"b5465c0ebfafb628d9f135c1748a3218","@sp":"1ec5d7d4b6df85c0","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":261.074041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:50:14.2492120Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:50:14.3000600Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:50:14.3048360Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:50:14.6812710Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"21","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:50:14.7986090Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:50:14.8084000Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:50:59.6657950Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.3461"],"@tr":"c1442e5e498a6aee4448466fd9cf7e04","@sp":"8c11e3086d2fec74","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":8.346125,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:50:59.8272870Z","@mt":"Getting all restaurants","@tr":"b1d9e3f927a86b625fe78b8a2636412c","@sp":"9abfaedbdc8cba28","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MMU:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MMU"}
{"@t":"2024-07-17T13:50:59.8627170Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"b1d9e3f927a86b625fe78b8a2636412c","@sp":"9abfaedbdc8cba28","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MMU:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MMU"}
{"@t":"2024-07-17T13:50:59.8629880Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"b1d9e3f927a86b625fe78b8a2636412c","@sp":"9abfaedbdc8cba28","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MMU:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MMU"}
{"@t":"2024-07-17T13:51:00.0353210Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"b1d9e3f927a86b625fe78b8a2636412c","@sp":"9abfaedbdc8cba28","elapsed":"138","parameters":"@__searchPhraseToLower_0_rewritten='%resta%' (Size = 4000), @__p_1='8', @__p_2='2'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MMU:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MMU"}
{"@t":"2024-07-17T13:51:00.1043440Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["361.4097"],"@tr":"b1d9e3f927a86b625fe78b8a2636412c","@sp":"9abfaedbdc8cba28","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":361.409666,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:51:20.0301200Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.8296"],"@tr":"596d856d9482124bd863c9e0c2451abf","@sp":"aca52c94a3cc26f2","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.829625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:51:20.0699010Z","@mt":"Getting all restaurants","@tr":"2a11314dd73b183747df50fe91931dbc","@sp":"15f9643be021943b","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN0:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN0"}
{"@t":"2024-07-17T13:51:20.1282850Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2a11314dd73b183747df50fe91931dbc","@sp":"15f9643be021943b","elapsed":"31","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='8', @__p_2='2'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN0:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN0"}
{"@t":"2024-07-17T13:51:20.1311120Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["65.1690"],"@tr":"2a11314dd73b183747df50fe91931dbc","@sp":"15f9643be021943b","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":65.169041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:52:33.2118800Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.8830"],"@tr":"29fba58d34869f002997f01e0ea4fed2","@sp":"44bc9715b908f4d2","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.883042,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:52:33.3152380Z","@mt":"Getting all restaurants","@tr":"71b528a7c2613d9f979ac64201053c72","@sp":"c793c5f557472cbd","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN2:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN2"}
{"@t":"2024-07-17T13:52:33.3296120Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"71b528a7c2613d9f979ac64201053c72","@sp":"c793c5f557472cbd","elapsed":"9","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='8', @__p_2='2'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN2:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN2"}
{"@t":"2024-07-17T13:52:33.3315830Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["25.8168"],"@tr":"71b528a7c2613d9f979ac64201053c72","@sp":"c793c5f557472cbd","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":25.816791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:52:42.8485430Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.0996"],"@tr":"8e44c77737fb04860862dea6490a164a","@sp":"c4d623f5fe00f688","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.099583,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:52:42.8823040Z","@mt":"Getting all restaurants","@tr":"9396e2415bcfe6d45a13941fd5cac6b1","@sp":"f30edc7378da23bf","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN4:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN4"}
{"@t":"2024-07-17T13:52:42.8933200Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"9396e2415bcfe6d45a13941fd5cac6b1","@sp":"f30edc7378da23bf","elapsed":"10","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='48', @__p_2='12'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN4:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN4"}
{"@t":"2024-07-17T13:52:42.8949290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["13.2306"],"@tr":"9396e2415bcfe6d45a13941fd5cac6b1","@sp":"f30edc7378da23bf","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":13.230625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:20.7347150Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.7643"],"@tr":"86b47edaa359aa12f776717ad56eda23","@sp":"33f3f35f6ed90352","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.764334,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:20.9223310Z","@mt":"Getting all restaurants","@tr":"fb4a4804597184cf83d5562c4538db3c","@sp":"3d7d13bc1fcc3acd","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN6:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN6"}
{"@t":"2024-07-17T13:53:20.9462350Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"fb4a4804597184cf83d5562c4538db3c","@sp":"3d7d13bc1fcc3acd","elapsed":"17","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='20', @__p_2='5'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN6:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN6"}
{"@t":"2024-07-17T13:53:20.9494290Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["32.5762"],"@tr":"fb4a4804597184cf83d5562c4538db3c","@sp":"3d7d13bc1fcc3acd","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":32.576208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:31.5927510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.5570"],"@tr":"f22672f4df8f6cca80c49be9d5f5c96f","@sp":"6d8b6ba61f45c3d3","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.557041,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:31.7548650Z","@mt":"Getting all restaurants","@tr":"f0c95d81a9470a9d0832ffd788de7784","@sp":"9585e96b8f4c33ac","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN8:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN8"}
{"@t":"2024-07-17T13:53:31.7757460Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"f0c95d81a9470a9d0832ffd788de7784","@sp":"9585e96b8f4c33ac","elapsed":"15","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='12', @__p_2='3'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MN8:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MN8"}
{"@t":"2024-07-17T13:53:31.7781640Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["26.6768"],"@tr":"f0c95d81a9470a9d0832ffd788de7784","@sp":"9585e96b8f4c33ac","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":26.67675,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:53.0822410Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.6764"],"@tr":"76873ab22dd91eaebff80ff537b93cf3","@sp":"5f58ec9c823b07b0","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.676416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:53:53.2169670Z","@mt":"Getting all restaurants","@tr":"bb88effbe543b52be0b3a5fd61676639","@sp":"3dfeadb79c5544dd","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNA:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNA"}
{"@t":"2024-07-17T13:53:53.2399980Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"bb88effbe543b52be0b3a5fd61676639","@sp":"3dfeadb79c5544dd","elapsed":"18","parameters":"@__searchPhraseToLower_0_rewritten='%restaurant%' (Size = 4000), @__p_1='9', @__p_2='1'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nWHERE LOWER([r].[Name]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\' OR LOWER([r].[Description]) LIKE @__searchPhraseToLower_0_rewritten ESCAPE N'\\'\nORDER BY (SELECT 1)\nOFFSET @__p_1 ROWS FETCH NEXT @__p_2 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNA:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNA"}
{"@t":"2024-07-17T13:53:53.2428030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["29.6828"],"@tr":"bb88effbe543b52be0b3a5fd61676639","@sp":"3dfeadb79c5544dd","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":29.68275,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:54:07.3532490Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.4585"],"@tr":"d05e4532fb25da7b5bcd85bd668f55e0","@sp":"26ef6146c0e95248","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.458458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:54:07.4127760Z","@mt":"Getting all restaurants","@tr":"a95e6064c415d2af5c6b5c25b25ca1a6","@sp":"fe33b2938b5f5a62","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNC:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNC"}
{"@t":"2024-07-17T13:54:07.4201300Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"a95e6064c415d2af5c6b5c25b25ca1a6","@sp":"fe33b2938b5f5a62","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNC:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNC"}
{"@t":"2024-07-17T13:54:07.4205380Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"a95e6064c415d2af5c6b5c25b25ca1a6","@sp":"fe33b2938b5f5a62","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNC:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNC"}
{"@t":"2024-07-17T13:54:07.4917610Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"a95e6064c415d2af5c6b5c25b25ca1a6","@sp":"fe33b2938b5f5a62","elapsed":"61","parameters":"@__p_0='9', @__p_1='1'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNC:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNC"}
{"@t":"2024-07-17T13:54:07.4936550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["84.7479"],"@tr":"a95e6064c415d2af5c6b5c25b25ca1a6","@sp":"fe33b2938b5f5a62","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":84.747875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:54:21.1769160Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.5852"],"@tr":"6d0211381a2bb3c5de36813828dcda33","@sp":"1e71e09277506b80","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.585208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:54:21.2846930Z","@mt":"Getting all restaurants","@tr":"5601aaf198bc53bca3ff34101e804e1d","@sp":"845d438aaf5b6a77","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNE"}
{"@t":"2024-07-17T13:54:21.3002050Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"5601aaf198bc53bca3ff34101e804e1d","@sp":"845d438aaf5b6a77","elapsed":"12","parameters":"@__p_0='0', @__p_1='1'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5081b18b-98c6-402f-908d-ea2ce4c64957","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56CTUN2MNE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56CTUN2MNE"}
{"@t":"2024-07-17T13:54:21.3027910Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["20.0286"],"@tr":"5601aaf198bc53bca3ff34101e804e1d","@sp":"845d438aaf5b6a77","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":20.028625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:55:42.0238860Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:55:42.0740200Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:55:42.0789700Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T13:55:42.3524230Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:55:42.4605980Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"9","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:55:42.4699810Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T13:55:46.5614920Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["8.5028"],"@tr":"733b4b32b7a9b5597ea50df1f8b54ac9","@sp":"62122bf9b4c33ba5","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":8.502792,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T13:55:46.6845400Z","@mt":"Getting all restaurants","@tr":"9fc416323d495936409de92478a37108","@sp":"f744433b8bb2209e","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"5da152d6-d6b4-4919-9ed7-41f5d97c0ecf","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56D0K72D2A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56D0K72D2A"}
{"@t":"2024-07-17T13:55:46.7010330Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"9fc416323d495936409de92478a37108","@sp":"f744433b8bb2209e","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5da152d6-d6b4-4919-9ed7-41f5d97c0ecf","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56D0K72D2A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56D0K72D2A"}
{"@t":"2024-07-17T13:55:46.7012960Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"9fc416323d495936409de92478a37108","@sp":"f744433b8bb2209e","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"5da152d6-d6b4-4919-9ed7-41f5d97c0ecf","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56D0K72D2A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56D0K72D2A"}
{"@t":"2024-07-17T13:55:46.7475590Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"9fc416323d495936409de92478a37108","@sp":"f744433b8bb2209e","elapsed":"19","parameters":"@__p_0='0', @__p_1='10'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"5da152d6-d6b4-4919-9ed7-41f5d97c0ecf","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56D0K72D2A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56D0K72D2A"}
{"@t":"2024-07-17T13:55:46.8028850Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["202.3530"],"@tr":"9fc416323d495936409de92478a37108","@sp":"f744433b8bb2209e","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":202.353,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:13:25.5576180Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:13:25.6101610Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:13:25.6152600Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:13:25.9020920Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:13:26.0140190Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"10","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:13:26.0247550Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:13:32.6591510Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["9.8634"],"@tr":"5c7d5267af0dc6ddb5ebe6336957c240","@sp":"0bba1c68fbcb49a5","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":9.863416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:13:32.8840820Z","@mt":"Getting all restaurants","@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SE"}
{"@t":"2024-07-17T14:13:33.0432070Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","elapsed":"124","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SE"}
{"@t":"2024-07-17T14:13:33.0563060Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SE"}
{"@t":"2024-07-17T14:13:33.0566540Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SE"}
{"@t":"2024-07-17T14:13:33.1045230Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","elapsed":"15","parameters":"@__p_0='0', @__p_1='10'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SE:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SE"}
{"@t":"2024-07-17T14:13:33.1597220Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["371.2974"],"@tr":"5b824c5d8da32664369d77fff9f044d1","@sp":"ed12c421f7b23497","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":371.297416,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:13:59.7212550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["1.3819"],"@tr":"f319add860d350715d69a48f55bb770a","@sp":"7e393b45e683f6b0","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":1.381875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:13:59.7696250Z","@mt":"Getting all restaurants","@tr":"ca26f98d34ea75a55b9fb438c5b0f95c","@sp":"df94194c06543a62","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SG:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SG"}
{"@t":"2024-07-17T14:13:59.8290200Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"ca26f98d34ea75a55b9fb438c5b0f95c","@sp":"df94194c06543a62","elapsed":"17","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SG:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SG"}
{"@t":"2024-07-17T14:13:59.8336580Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"ca26f98d34ea75a55b9fb438c5b0f95c","@sp":"df94194c06543a62","elapsed":"3","parameters":"@__p_0='40', @__p_1='10'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"25662fa1-ff8e-4ef2-a693-4090665146c4","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DAHU47SG:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DAHU47SG"}
{"@t":"2024-07-17T14:13:59.8369080Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["73.5909"],"@tr":"ca26f98d34ea75a55b9fb438c5b0f95c","@sp":"df94194c06543a62","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":73.590875,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:25:39.4205850Z","@mt":"Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data; this mode should only be enabled during development.","@l":"Warning","EventId":{"Id":10400,"Name":"Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLoggingEnabledWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:25:39.4799970Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:25:39.4857840Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2024-07-17T14:25:40.1464310Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"88","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:25:40.3594650Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"18","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:25:40.3708950Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"4","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT CASE\n    WHEN EXISTS (\n        SELECT 1\n        FROM [AspNetRoles] AS [a]) THEN CAST(1 AS bit)\n    ELSE CAST(0 AS bit)\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2024-07-17T14:25:47.3960150Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["10.7942"],"@tr":"20ccda6bfb1425870048faf1bd684efa","@sp":"4bbc29a9ab6c929e","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":10.794208,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:25:47.4923060Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["53.3567"],"@tr":"b9a11ca6b40285ca8e99de4f9fdadb39","@sp":"2e5fcc2f100c7368","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":400,"Elapsed":53.356708,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:08.5198550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["4.1225"],"@tr":"95d565c1675add3f7ea4532924e27505","@sp":"7c3a4c6917a1579a","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":4.122458,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:08.6673260Z","@mt":"Getting all restaurants","@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F54:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F54"}
{"@t":"2024-07-17T14:26:08.7664860Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","elapsed":"51","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F54:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F54"}
{"@t":"2024-07-17T14:26:08.7835260Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F54:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F54"}
{"@t":"2024-07-17T14:26:08.7839620Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F54:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F54"}
{"@t":"2024-07-17T14:26:08.8413570Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","elapsed":"21","parameters":"@__p_0='20', @__p_1='5'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F54:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F54"}
{"@t":"2024-07-17T14:26:08.9535030Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["399.2778"],"@tr":"e7aaf42459933f6243a865fa967bbe96","@sp":"f84bbeb39ec85e13","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":399.277791,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:26.0278450Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.5705"],"@tr":"2fe160e6a2277a195175289e670fda0e","@sp":"1b88460adf723f66","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.570541,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:26.1950880Z","@mt":"Getting all restaurants","@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F56:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F56"}
{"@t":"2024-07-17T14:26:26.2378640Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","elapsed":"15","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F56:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F56"}
{"@t":"2024-07-17T14:26:26.2404020Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F56:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F56"}
{"@t":"2024-07-17T14:26:26.2405840Z","@mt":"The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.","@l":"Warning","@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","EventId":{"Id":10102,"Name":"Microsoft.EntityFrameworkCore.Query.RowLimitingOperationWithoutOrderByWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Query","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F56:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F56"}
{"@t":"2024-07-17T14:26:26.3343290Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","elapsed":"89","parameters":"@__p_0='5'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F56:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F56"}
{"@t":"2024-07-17T14:26:26.3364060Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["148.3434"],"@tr":"f8b91f60be6958474bec2602ee6deda2","@sp":"e9676a43409d0016","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":148.343375,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:33.8105150Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.7323"],"@tr":"3ffdf530ef1e117b7735ae9729b16c03","@sp":"6bc75b823a8b043e","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.732333,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:34.0025520Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["21.3246"],"@tr":"061b28bb0efefa882b2a75f257da0e69","@sp":"e9ae92d8e477d170","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":400,"Elapsed":21.324625,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:40.9543790Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["0.1130"],"@tr":"6d3ff03a30e32a7cc11c2295e9e826c2","@sp":"833530fd3098660b","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":307,"Elapsed":0.113,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2024-07-17T14:26:41.0198810Z","@mt":"Getting all restaurants","@tr":"6105acf844c632046f9d1c6c04ff1639","@sp":"b4b1aac94a704c76","SourceContext":"Restaurants.Application.GetAllRestaurantsQuery","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F5A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F5A"}
{"@t":"2024-07-17T14:26:41.0456190Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"6105acf844c632046f9d1c6c04ff1639","@sp":"b4b1aac94a704c76","elapsed":"20","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT COUNT(*)\nFROM [Restaurants] AS [r]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F5A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F5A"}
{"@t":"2024-07-17T14:26:41.0598090Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"6105acf844c632046f9d1c6c04ff1639","@sp":"b4b1aac94a704c76","elapsed":"9","parameters":"@__p_0='15', @__p_1='5'","commandType":"Text","commandTimeout":30,"newLine":"\n","commandText":"SELECT [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[OwnerId], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\nFROM [Restaurants] AS [r]\nORDER BY (SELECT 1)\nOFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"8bcc139c-79a6-47fa-ad2f-c4368f7567d9","ActionName":"Restaurants.Api.RestaurantsController.GetAll (Restaurants.Api)","RequestId":"0HN56DHCT2F5A:00000001","RequestPath":"/api/restaurants","ConnectionId":"0HN56DHCT2F5A"}
{"@t":"2024-07-17T14:26:41.0633550Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["45.1992"],"@tr":"6105acf844c632046f9d1c6c04ff1639","@sp":"b4b1aac94a704c76","RequestMethod":"GET","RequestPath":"/api/restaurants","StatusCode":200,"Elapsed":45.199166,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
